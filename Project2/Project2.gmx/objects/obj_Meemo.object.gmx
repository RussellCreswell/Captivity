<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Meemo_stand_L</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spd = 5;
globalvar vspd; 
vspd = 0;
globalvar hspd;
hspd = 0;

globalvar right;
right = true;
globalvar left; 
left = false;
globalvar moving;
moving = false;
attacking = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_Meemo.attacking = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!attacking) {
moving = false;
/**
if(!place_meeting(x,y-35,obj_solid)) {
    y = y+1;
    spd = 0;
    moving = false;
} else if(!place_meeting(x,y+70,obj_solid)) {
    y = y-1;
    spd = 0;
    moving = false;
}
if(!place_meeting(x+spd+1,y,obj_solid)) {
    x = x-5;
    spd = 0;
    moving = false;
} else if(!place_meeting(x-15,y,obj_solid)) {
    x = x+1;
    spd = 0;
    moving = false;
} */
if(keyboard_check(vk_up)) {
    moving = true;
    vspd -= spd;
    if(vspd &lt; -5) {
        vspd = -5;
    }
    if(right) {
        sprite_index = spr_Meemo_walk_R;
    } else {
        sprite_index = spr_Meemo_walk_L;
    }
} else if(keyboard_check(vk_down)) {
    moving = true;
    vspd += spd;
    if(vspd &gt; 5) {
        vspd = 5;
    }
    if(right) {
        sprite_index = spr_Meemo_walk_R;
    } else {
        sprite_index = spr_Meemo_walk_L;
    }
} 
if(keyboard_check(vk_left)) {
    right = false;
    left = true;
    sprite_index = spr_Meemo_walk_L;
    hspd -= spd;
    if(hspd &lt; -5) {
        hspd = -5;
    }
} else if(keyboard_check(vk_right)) {
    left = false;
    right = true;
    sprite_index = spr_Meemo_walk_R;
    hspd += spd;
    if(hspd &gt; 5) {
        hspd = 5;
    }
} else if(!moving){
    if(right) {
        sprite_index = spr_Meemo_stand_R;
    } else {
        sprite_index = spr_Meemo_stand_L;
    }
}

// Attack
if(keyboard_check_pressed(vk_lcontrol)) {
    attacking = true;
    if(right) {
        sprite_index = spr_Meemo_att_R;
    } else {
        sprite_index = spr_Meemo_att_L;
    }
    num[0] = 0;
    num[1] = 4;
    num[2] = 9;
    num[3] = 14;
    num[4] = 19;
    num[5] = 24;
    num[6] = 29;
    num[7] = 34;
    i = irandom_range(0, 7);
    image_index = num[i];
    image_speed = 1.1;
    alarm[0] = 13;
}

if (place_meeting(x+hspd, y, obj_solid)) {
    while (!place_meeting(x+sign(hspd), y-2, obj_solid)) {
        x += sign(hspd);
    }
    hspd = 0;
}
x+=hspd;
if (place_meeting(x, y+vspd, obj_solid)) {
    while (!place_meeting(x, y+sign(vspd), obj_solid)) {
        y += sign(vspd);
    }
    vspd = 0;
}
y+=vspd;
hspd = 0;
vspd = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
